name: 编译mipsel版cloudflared

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
env:
  TZ: Asia/Shanghai
permissions:
  contents: write
  actions: write
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      - name: 检查版本
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/cloudflare/cloudflared/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT
      - name: delete-workflow
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          retain_days: 0
          keep_minimum_runs: 0

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      - name: 获取最新Go
        run: |
          latest_version=$(curl -L -k -s https://golang.org/dl/?mode=json | grep -m 1 -o '"version": "[^"]*' | sed 's/"version": "//' | tr -d 'go" ')
          echo "go版本=$latest_version"
          echo "gotag=$latest_version" >> $GITHUB_ENV
      - name: 安装go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.gotag }}
      - name: 安装 UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true
      - name: 编译
        run: |
          git clone https://github.com/cloudflare/cloudflared -b ${{ needs.check.outputs.ver }} ../src
          cd ../src
          sudo timedatectl set-timezone "Asia/Shanghai"
          sed -i "s|-ldflags='|-ldflags=' -s -w |g" ./Makefile
          GOOS=linux GOARCH=mipsle GOMIPS=softfloat make cloudflared
          upx --lzma --best cloudflared
          mkdir -p ./bin
          mv -f ./cloudflared ./bin/cloudflared
          #go clean
          #GOOS=freebsd GOARCH=amd64 make cloudflared
          #mv -f ./cloudflared ./bin/cloudflared-freebsd-x86-64
          cd ./bin
          echo $(md5sum cloudflared | awk '{print $1;}') >MD5.txt
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - name: 发布Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.check.outputs.ver }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}

           **这是mipsel架构的**

           **[官方更新说明](https://github.com/cloudflare/cloudflared/releases)**
          files: |
              ../src/bin/*
  keepalive-workflow:
    # github超过60天未提交将自动停止工作流
    name: 工作流保活 
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: gautamkrishnar/keepalive-workflow@v2
        #with:
          #use_api: true
